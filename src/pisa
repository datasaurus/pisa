#!/bin/sh
#
# This script creates an SVG document with a Cartesian plot, axes, labels,
# and optional elements.
#
# Usage:
#	xyplot [-d title] [-l pixels] [-r pixels] [-t pixels] [-b pixels]
#		[-w pixels] [-h pixels] [-f pixels] [-X format] [-Y format]
#		[-p prefix_file] [-s suffix_file]
#		x0 x1 y0 y1
# where:
#	-d		title of document svg element
#	-l		left margin, pixels.
#	-r		right margin, pixels.
#	-t		top margin, pixels.
#	-b		bottom margin, pixels.
#	-w		document width, pixels.
#	-h		document height, pixels.
#	-f		font size, pixels.
#	-X		format for x axis labels. See printf (1).
#	-Y		format for y axis labels. See printf (1).
#	x0		x coordinate of left side of plot, plot units.
#	x1		x coordinate of right side of plot, plot units.
#			x1 > x0.
#	y0		y coordinate of bottom of plot, plot units.
#	y1		y coordinate of top of plot, plot units.
#			y1 > y0.
#	-p		File with SVG code rendered before, or under, the
#			plot document coordinates (pixels). Could also be
#			meta data, such as CSS links.
#	-s		File with SVG code rendered after, or on top of, the
#			plot such as axis labels, legends, and captions, using
#			document coordinates (pixels).
#
########################################################################
#
# Copyright (c) 2013 Gordon D. Carrie
# 
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
# 
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.
#
# Please send feedback to dev0@trekix.net
#
########################################################################

if test $DEBUG
then
    set -x
fi

# Check for numerical value
check_num() {
    name="$1"
    val="$2"
    if ! printf '%g' $val > /dev/null 2>&1
    then
	printf "$0: expected number for %s, got %s\n" "$name" "$val" 1>&2
	exit 1
    fi
}

# _dpy denotes display coordinates.
# Otherwise, variable specifies plot coordinates.

# Set some defaults
font_sz="9.0"	
left="`echo $font_sz \* 12 | bc -l`"
right="`echo $font_sz \* 6 | bc -l`"
top="`echo $font_sz \* 3 | bc -l`"
bottom="`echo $font_sz \* 6 | bc -l`"
doc_width="800"
doc_height=
x_fmt="%.3g"
y_fmt="%.3g"

# Parse command line
while getopts :d:l:r:t:b:w:h:f:X:Y:p:s: opt
do
    case $opt
    in
	d)
	    title="$OPTARG"
	    ;;
	l)
	    left=$OPTARG
	    check_num "left margin" $left
	    ;;
	r)
	    right=$OPTARG
	    check_num "right margin" $right
	    ;;
	t)
	    top=$OPTARG
	    check_num "top margin" $top
	    ;;
	b)
	    bottom=$OPTARG
	    check_num "bottom margin" $bottom
	    ;;
	w)
	    doc_width=$OPTARG
	    check_num "document width" $doc_width
	    ;;
	h)
	    doc_height=$OPTARG
	    check_num "document height" $doc_height
	    ;;
	f)
	    font_sz=$OPTARG
	    check_num "font size" $font_sz
	    ;;
	X)
	    x_fmt="$OPTARG"
	    ;;
	Y)
	    y_fmt="$OPTARG"
	    ;;
	p)
	    prefix="$OPTARG"
	    ;;
	s)
	    suffix="$OPTARG"
	    ;;
	\?)
	    echo "$0: unknown option $OPTARG" 1>&2
	    exit 1
	    ;;
    esac
done
shift `expr $OPTIND - 1`
if [ $# -ne 4 ]
then
    {
	printf "Usage: $0 [-d title] [-l pixels] [-r pixels]"
	printf " [-t pixels] [-b pixels] [-w pixels] [-h pixels] "
	printf " [-f pixels] [-X format] [-Y format]"
	printf " x0 x1 y0 y1"
    } 1>&2
    exit 1
fi
if test $prefix && ! test -r $prefix
then
    echo "$0: no readable prefix file named $prefix" 1>&2
    exit 1
fi
if test $suffix && ! test -r $suffix
then
    echo "$0: no readable suffix file named $suffix" 1>&2
    exit 1
fi
x0=$1; shift
check_num "x coordinate at left side of plot" $x0
x1=$1; shift
check_num "x coordinate at right side of plot" $x1
y0=$1; shift
check_num "y coordinate of bottom edge of plot" $y0
y1=$1; shift
check_num "y coordinate of top edge of plot" $y1

{
    echo title="$title"
    echo x0=$x0
    echo x1=$x1
    echo y0=$y0
    echo y1=$y1
    echo doc_width=$doc_width
    if test $doc_height
    then
	echo doc_height=$doc_height
    fi
    echo top=$top
    echo right=$right
    echo bottom=$bottom
    echo left=$left
    echo font_sz=$font_sz
    echo x_fmt=$x_fmt
    echo y_fmt=$y_fmt
    if test -r $prefix
    then
	echo 'start_doc'
	cat $prefix
    fi
    echo 'start_plot'
    cat
    echo 'end_plot'
    if test -r $suffix
    then
	cat $suffix
    fi
    echo 'end'
} | xyplot.awk
